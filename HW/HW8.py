import random
from helpers import input


def __task1_func(p1=None, p2=None, p3=None):
    if p1:
        print(p1)
    if p2:
        print(p2)
    if p3:
        print(p3)


def task1():
    """
    Создайте функцию которая принимает на вход 3 именованных параметра, выведите на печать значения этих параметров,
    но только в том случае если они не равны None.
    """
    a = random.randint(0, 1000)
    a = a if a > 300 else None
    b = random.randint(0, 1000)
    b = b if b > 300 else None
    c = random.randint(0, 1000)
    c = c if c > 300 else None
    print(f"inputs: {a}, {b}, {c}")
    __task1_func(a, b, c)


def __task2_count(S):
    parts = S * 1000 // 140
    print(f"Итого: {4.00 + 0.25 * parts}")


def task2():
    """
    Представьте, что сумма за пользование услугами такси складывается из
    базового тарифа в размере $4,00 плюс $0,25 за каждые 140 м поездки.
    Напишите функцию, принимающую в качестве единственного параметра
    расстояние поездки в километрах и возвращающую итоговую сумму опла-
    ты такси.
    """
    __task2_count(int(input("Введите расстояние: ")))


def task3():
    """
    Напишите программу, которая будет складывать числа, введенные поль-
    зователем. Сигналом к окончанию ввода должна служить пустая строка.
    Отобразите на экране сумму значений (или 0.0, если пользователь сразу
    же пропустил ввод). Решите эту задачу с использованием рекурсии. В ва-
    шей программе не должны присутствовать циклы.
    Подсказка. В теле вашей рекурсивной функции должен производиться запрос одно-
    го числа у пользователя, после чего должно быть принято решение о том, произво-
    дить ли еще один рекурсивный вызов. Ваша функция не должна принимать аргумен-
    тов, а возвращать будет числовое значение
    """

    def recursion_sum(number):
        summary = 0
        if number:
            summary += int(number)
            return summary + recursion_sum(input("Введите число: "))
        else:
            return summary

    print(recursion_sum(input("Введите число: ")))


def __task4_calculate(*args):
    return (avg := (sum(args) / len(args))), [i for i in args if i > avg]


def task4():
    """
    Напишите функцию cacluate, которая может принимать любое количество чисел и возвращать кортеж.

    Первое значение кортежа - это среднее значение всех параметров, а второе значение - все числа, превышающие среднее значение.
    Второе значение оформите в виде списка.
    """
    data = []
    while 0 not in data:
        data.append(int(input("Введите число или 0: ")))
    print(__task4_calculate(*data))


def __task5_func(*args, **kwargs):
    """
    Очень часто веб-дизайнеры используют HEX-значение какого-либо цвета.
    Напишите программу принимающую 2 позиционных аргумента: слово "Цвета" и количество цветов.
    и произвольное количество значений Цвет : HEX. Программа должна вывести все данные на экран.
    """
    for color, hex_color in kwargs.items():
        print(f'{color}: {hex_color}')

def task5():
    return __task5_func("Цвета", 3, pink="#ffc0cb", yellow="#ffff00")